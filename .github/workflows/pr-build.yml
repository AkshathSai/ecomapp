name: PR Build and Test

on:
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

env:
  JAVA_VERSION: '21'
  MAVEN_OPTS: '-Dmaven.repo.local=.m2/repository -Xmx1024m'

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      run: mvn clean test -B

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit

    - name: Build application
      run: mvn clean compile -DskipTests -B

    - name: Run code quality checks
      run: mvn clean verify -DskipTests -B

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: build-artifacts
        path: |
          target/*.jar
          target/surefire-reports/
        retention-days: 1

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run dependency check
      run: |
        mvn org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=7
      continue-on-error: true

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: target/dependency-check-report.html
        retention-days: 7

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ecomapp:pr-${{ github.event.number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm -d --name test-app -p 8080:8080 ecomapp:pr-${{ github.event.number }}
        sleep 30
        docker logs test-app
        docker stop test-app
