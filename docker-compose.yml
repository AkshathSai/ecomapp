version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:5.0-focal
    container_name: ecomapp-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ecomapp
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecomapp-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ecomapp-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - ecomapp-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Kafka message broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ecomapp-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      # Memory optimization for resource-constrained environments
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms128M"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - ecomapp-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Spring Boot application
  ecomapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecomapp-backend
    restart: unless-stopped
    depends_on:
      - mongodb
      - kafka
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/ecomapp
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ecomapp-network
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local
  kafka_data:
    driver: local

networks:
  ecomapp-network:
    driver: bridge
